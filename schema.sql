SHOW DATABASES;

CREATE DATABASE IF NOT EXISTS Housify;
USE Housify;

CREATE TABLE IF NOT EXISTS `USER` (  -- Wrapped USER in backticks because USER is a reserved keyword
    USER_ID VARCHAR(100) NOT NULL PRIMARY KEY,
    NAME VARCHAR(50) NOT NULL, 
    EMAIL VARCHAR(100) NOT NULL UNIQUE, 
    PASSWORD VARCHAR(50) NOT NULL, 
    PHONE VARCHAR(50),
    INCOME DECIMAL(30, 2)
);

CREATE TABLE IF NOT EXISTS LISTING (
    IMAGE_URL TEXT,
    ID VARCHAR(100) PRIMARY KEY,
    USER_ID VARCHAR(100) NOT NULL, -- id of the owner of this listing
    NAME VARCHAR(100), 
    DESCRIPTION TEXT NOT NULL,  -- Changed TEXT(1000) to TEXT because TEXT doesn't take length
    STREET VARCHAR(100),
    CITY VARCHAR(100) NOT NULL,
    STATE VARCHAR(100) NOT NULL,
    PINCODE INT NOT NULL,  -- Removed (6) because INT length specifier is deprecated
    AVAILABILITY BOOLEAN DEFAULT TRUE, 
    PRICEPERMONTH DECIMAL(10, 2) NOT NULL,
    DISCOUNT DECIMAL(4, 2),
    SIZE INT NOT NULL, 
    RATING INT
);

CREATE TABLE IF NOT EXISTS BOOKING (
    ID VARCHAR(100) NOT NULL PRIMARY KEY, 
    USER_ID VARCHAR(100) NOT NULL, -- id of user who made this booking
    LISTING_ID VARCHAR(100) NOT NULL, -- id of the listing booked 
    START_DATE DATE, 
    END_DATE DATE
);

-- Reviews left by users for listings
CREATE TABLE IF NOT EXISTS REVIEW (
    ID VARCHAR(100) NOT NULL PRIMARY KEY,
    LISTING_ID VARCHAR(100) NOT NULL,
    USER_ID VARCHAR(100) NOT NULL,
    RATING INT NOT NULL CHECK (RATING BETWEEN 1 AND 5),
    COMMENT TEXT,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

ALTER TABLE LISTING
ADD CONSTRAINT fk_listing_user FOREIGN KEY (USER_ID) REFERENCES `USER`(USER_ID) ON DELETE CASCADE;  -- Added constraint names for clarity

ALTER TABLE BOOKING 
ADD CONSTRAINT fk_booking_user FOREIGN KEY (USER_ID) REFERENCES `USER`(USER_ID) ON DELETE CASCADE,  -- Added constraint names
ADD CONSTRAINT fk_booking_listing FOREIGN KEY (LISTING_ID) REFERENCES LISTING(ID) ON DELETE CASCADE;

ALTER TABLE REVIEW
ADD CONSTRAINT fk_review_listing FOREIGN KEY (LISTING_ID) REFERENCES LISTING(ID) ON DELETE CASCADE,
ADD CONSTRAINT fk_review_user FOREIGN KEY (USER_ID) REFERENCES `USER`(USER_ID) ON DELETE CASCADE;
